
name: CI
on:
  push:
    branches:
      - "*"
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
      env:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        DB_HOST: postgres
        DB_PORT: 5432
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: ${{ secrets.DEBUG }}

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

      zookeeper:
        image: 'bitnami/zookeeper:latest'
        ports:
          - "2181:2181"
        env:
          ALLOW_ANONYMOUS_LOGIN: yes

      kafka:
        image: "bitnami/kafka:latest"
        ports:
          - "9093:9093"
          - "9092:9092"
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_CFG_LISTENERS: CLIENT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
          KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
          KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
          ALLOW_PLAINTEXT_LISTENER: yes

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Tests Dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
        poetry config virtualenvs.in-project true
        pip install --no-cache-dir wheel |
        pip wheel --no-cache-dir --use-pep517 "aiokafka==0.12.0"
        poetry install

    - name: Run Tests
      run: |
        export PATH="$HOME/.local/bin:$HOME/.poetry/bin:$PATH"
        poetry install
        poetry run pip install 'asyncpg==0.29.0'
        cd src && poetry run python -m pytest -v -s
